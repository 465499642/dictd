.\" compressdict.1 -- 
.\" Created: Wed Aug 23 22:52:25 1995 by r.faith@ieee.org
.\" Revised: Thu Aug 24 03:32:23 1995 by r.faith@ieee.org
.\" Copyright 1995 Rickard E. Faith (r.faith@ieee.org)
.\" 
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" "
.TH COMPRESSDICT 1 "23 August 1995" "" ""
.SH NAME
compressdict \- compress a dictionary for the dict program
.SH SYNOPSIS
.BI "compressdict \-a " dict
.br
.BI "compressdict \-e [\-i " index "] " dict
.br
.BI "compressdict \-d " dict
.SH DESCRIPTION
.B compressdict
is used to compress a dictionary for the
.BR dict (1)
program.  If an index made by
.BR buildindex (1)
is available, the offsets in the index will be revised to reflect the
compressed state.
.PP
The analysis phase of the compression algorithm finds all occurences of
space-delimited words in the input text, and ranks these words from
most-frequent to least frequent.  Only words that appear more than once are
listed in the "compression dictionary".  In order to improve compression,
any words that appear only once are tested for possible suffixes that are
already in the dictionary.
.PP
The encoding phase of the compression algorithm replaces words that appear
in the compression dictionary with 1, 2, or 3 byte values.
.PP
The decoding phsae of the compression algorithm looks up the 1, 2, or 3
byte codes in the compression dictionary (wordlist), and replaces them with
the original word.
.PP
I invented this algorithm myself and, to the best of my knowledge, it is
not patented or otherwise restricted.  A static dictionary is used with
byte-granularity encoding, so this isn't very fancy.  Compression ratios on
typical dictionaries are between 55 and 50% (50% being better), including
the (uncompressed) wordlist.  If the wordlist is compressed (e.g., with
.BR gzip (1)),
the ratio improves slightly.
.PP
The important thing about the algorithm is that decoding can begin at any
place in the file.  More complex compression algorithms (e.g., a word-based
huffman compressor, which also permits random access) could be used, but
probably won't get much better than 40% compression anyway (using
.BR gzip (1)
as a "gold standard").
.SH OPTIONS
.TP
.B \-a
Performs the analysis pass on
.IR dict ,
producing a compression dictionary (wordlist) as a file with a ".cd"
extension.
.TP
.B \-e
Encodes
.I dict
using the compression dictionary (wordlist) generated using the
.B \-a
option.
.TP
.BI \-i " index"
Specifies the name of an index file which should be repositioned to reflect
the compressed state of the dictionary.  See
.BR buildindex (1)
for a description of the index file.  The new index file will have an
".idx" extension.
.sp
The compressed dictionary is written on the standard output.
.TP
.B \-d
Decodes a dictionary using the compression dictionary (wordlist) generated
using the
.B \-a
option.  This is used to check the integrity of the
compression/decompression algorith.
.SH FILES
".cd"  compression dictionary (wordlist)
.br
".idx" new index
.SH "SEE ALSO"
.BR dict (1),
.BR buildindex (1)
.SH "COMPRESSION RATIOS"
The following ratios were observed on some sample data (compressed
dictionary size plus compression dictionary divided by the size of the
original uncompressed dictionary):
.br
(7965848+823648)/16814198 = 0.523
.br
(564280+123592)/1215833 = 0.566
.br
(549319+105925)/1193818 = 0.549
.br
(204923+39057)/387515 = 0.630
.PP
Because all of the compression dictionary has to be read in order to print
out any dictionary entry, time for a typical operation on a large database
was noted to increase from 0.2 seconds to 2.5 seconds.  This was reduced
to 0.6 seconds by optimizing the compression dictionary read.
.SH AUTHOR
The
.BR compressdict (1)
program was written by Rickard E. Faith (faith@cs.unc.edu) and is
distributable under the terms of the GNU General Public License.
.sp
The end-user is responsible for obtaining all data upon which this program
operates.  Please do not mail the author with requests for data.
