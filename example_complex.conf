#
# it is assumed that dictd is run with --pp 'm4 -P' arguments
#

#########################################################
#
# Simple macroses to define a simple database entry
#

m4_define(db_2arg,
  database $1 {
    data   /usr/share/dictd/$2.dict.dz
    index  /usr/share/dictd/$2.index
})

m4_define(db, db_2arg($1, $1))

db(gcide)
db_2arg(gaz, gazetteer)



#########################################################
#
# More complex macros implementing a combination of
# standard databases, virtual dictionaries and plugins.
#

m4_define(db_fast,
database $1`_standard' {
  index /usr/share/dictd/$2.index
  data /usr/share/dictd/$2.dict.dz

  # We disable "exact" search type because
  # judy-based plugin already made it.
  disable_strategy exact

  invisible
}
database_plugin $1`_fast_exact' {
  plugin "dictdplugin_judy.so"

  data "\
    allchars=0\n\
    utf8=$3\n\
    index=$2.index\n\
    data=$2.dict.dz\n\
  "

  # We want judy-based plugin does exact, lev and prefix strategies only.
  # Therefore, we disable all other strategies
  disable_strategy "substring"
  disable_strategy "suffix"
  disable_strategy "re"
  disable_strategy "regexp"
  disable_strategy "soundex"
  disable_strategy "word"

  invisible
}

database_virtual $1 {
  # virtual database implements
  # fast 'exact', 'lev' and 'prefix' search strategies
  # using Judy-based plugin
  # and standard algorithms for all other strategies.
  # Note that judy-based plugin is first in a list

  name   "@00-database-short"
  info   "@00-database-info"

  database_list "$1`_fast_exact,'$1`_standard'"
})

db_fast(vera, vera, 0)
db_fast(foldoc, foldoc, 0)
db_fast(wn, wn, 0)
