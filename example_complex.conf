#
# it is assumed that dictd is run with '--pp m4' arguments
#

#########################################################
#
# Simple macroses to define a simple database entry
#

define(db_2arg,
  database $1 {
    data   $2.dict.dz
    index  $2.index
})

define(db, db_2arg($1, $1))

db(gcide)
db_2arg(gaz, gazetteer)



#########################################################
#
# More complex macros implementing a combination of
# standard databases, virtual dictionaries and plugins.
#

define(db_low3,
database $1`_standard' {
  index $2.index
  data  $2.dict.dz

  # In order not to make exact search twice
  # we disable "exact" strategy here.
  disable_strategy exact

  invisible
}

database_plugin $1`_fast_exact' {
  plugin "dictdplugin_judy.so"

  data "\
    allchars = 0\n\
    utf8     = $3\n\
    index    = $2.index\n\
    data     = $2.dict.dz\n\
  "

  # We want judy-based plugin does exact, lev and prefix strategies only.
  # Therefore, we disable all other strategies
  disable_strategy "substring"
  disable_strategy "suffix"
  disable_strategy "re"
  disable_strategy "regexp"
  disable_strategy "soundex"
  disable_strategy "word"

  invisible
})

define(db3,
database_virtual $1 {
  # virtual database implements
  # fast 'exact', 'lev' and 'prefix' search strategies
  # using Judy-based plugin
  # and standard algorithms for all other strategies.

  name   "@00-database-short"
  info   "@00-database-info"

  database_list "$1`_fast_exact,'$1`_standard'"
})

define(db_low,  `db_low3($1, $1, 1)')
define(db, `db3($1, $1, 1)')

db(vera)
db(foldoc)
db(wn)
